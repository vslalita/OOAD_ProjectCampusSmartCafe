/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.csc.GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

import com.csc.CurrentSession;
import com.csc.Model.FoodItem;
import com.csc.Model.FoodPurchaseTransaction;

/**
 *
 * @author twinklesiva05
 */
public class PickUpOrdersPanel extends javax.swing.JPanel {

    /**
     * Creates new form PickUpOrders
     */
    public PickUpOrdersPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jButton1.setText("Pick up");
        
        jButton1.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				for(int i=0;i<pickUpList.size();i++){
					FoodPurchaseTransaction orderFoodPurchaseTransaction=pickUpList.get(i);
					if(CurrentSession.getCurrentUser().pickUpOrder(orderFoodPurchaseTransaction)){
						pickUpList.remove(i);
					}
					else{
						//TODO Test this.
						  JOptionPane.showInputDialog(getRootPane(),
	                                "Please try again",
	                                "Inane warning",
	                                JOptionPane.WARNING_MESSAGE);
					}
				}
			}
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            getOrderDetails(),
            new String [] {
                "check/uncheck", "OrderDetails","OrderLocation"
            }
        ));
        jScrollPane2.setViewportView(jTable1);
        
        jTable1.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(new JCheckBox()));
        
        jTable1.getModel().addTableModelListener(new TableModelListener(){
            @Override
            public void tableChanged(TableModelEvent e) {
                // TODO Auto-generated method stub
                System.out.println("Table changed"+e.getFirstRow());
                getOrderItems(e.getFirstRow());
            }

			private void getOrderItems(int firstRow) {
				// TODO Auto-generated method stub
				if(jTable1.getValueAt(firstRow, 0).equals(true)){
		            Integer id=(Integer) jTable1.getValueAt(firstRow,1);
		            FoodPurchaseTransaction order=new FoodPurchaseTransaction(id);
		            pickUpList.add(order);
		        }
		        else{
		            int id=(Integer)jTable1.getValueAt(firstRow, 1);
		            for(int i=0;i<pickUpList.size();i++){
		            	FoodPurchaseTransaction orderToBeDeleted=pickUpList.get(i);
		                if(id==orderToBeDeleted.getId()){
		                	pickUpList.remove(i);
		                }
		            }
		        }
			}
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(281, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(29, 29, 29))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 271, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 38, Short.MAX_VALUE)))
        );
    }// </editor-fold>                        


    private Object[][] getOrderDetails() {
		// TODO Auto-generated method stub
    	ArrayList<FoodPurchaseTransaction> orders=CurrentSession.getCurrentUser().getUnpickedOrders();
    	Object[][] values=new Object[orders.size()][3];
    	for(int i=0;i<orders.size();i++){
    		FoodPurchaseTransaction order=orders.get(i);
    		values[i][1]=order.getId();
    		values[i][2]=order.getFoodJoint().getLocation();
    	}
		return values;
	}


	// Variables declaration - do not modify 
    ArrayList<FoodPurchaseTransaction> pickUpList=new ArrayList<FoodPurchaseTransaction>();
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
